-- 1) attendance
CREATE TABLE attendance (
                            id               NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
                            active_qr_uuid   VARCHAR2(255 CHAR),
                            title            VARCHAR2(255 CHAR) NOT NULL,
                            attendance_time  TIMESTAMP(6)        NOT NULL,
                            CONSTRAINT pk_attendance PRIMARY KEY (id)
);

-- 2) email_task
CREATE TABLE email_task (
                            task_id         NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
                            is_sent         NUMBER(1) DEFAULT 0,
                            send_at         TIMESTAMP(6)       NOT NULL,
                            email_content   CLOB               NOT NULL,
                            email_subject   VARCHAR2(255 CHAR) NOT NULL,
                            CONSTRAINT pk_email_task PRIMARY KEY (task_id)
);

-- 3) email_receiver
CREATE TABLE email_receiver (
                                receiver_id      NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                task_id          NUMBER(19)        NOT NULL,
                                receiver_email   VARCHAR2(255 CHAR) NOT NULL,
                                receiver_name    VARCHAR2(255 CHAR) NOT NULL,
                                send_status      VARCHAR2(50 CHAR),
                                status_updated_at TIMESTAMP(6),
                                sent_at          TIMESTAMP(6),
                                CONSTRAINT fk_email_receiver_task FOREIGN KEY (task_id)
                                    REFERENCES email_task(task_id)
                                    ON DELETE CASCADE
);

-- 4) member
CREATE TABLE member (
                        id               NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
                        student_id       VARCHAR2(255 CHAR) NOT NULL,
                        member_name      VARCHAR2(255 CHAR) NOT NULL,
                        member_role      VARCHAR2(6 CHAR)   NOT NULL
    CONSTRAINT chk_member_role CHECK (member_role IN ('CORE','LEAD','MEMBER')),
                        batch            VARCHAR2(255 CHAR) NOT NULL,
                        department       VARCHAR2(255 CHAR) NOT NULL,
                        member_email     VARCHAR2(255 CHAR) NOT NULL,
                        is_activated     NUMBER(1) DEFAULT 1,
                        is_deleted       NUMBER(1) DEFAULT 0,
                        soft_deleted_at  TIMESTAMP(6),
                        CONSTRAINT pk_member PRIMARY KEY (id),
                        CONSTRAINT uq_member_student_id UNIQUE (student_id)
);

-- 5) participant
CREATE TABLE participant (
                             id               NUMBER(19) GENERATED BY DEFAULT AS IDENTITY,
                             member_id        NUMBER(19)        NOT NULL,
                             attendance_id    NUMBER(19)        NOT NULL,
                             attendance_type  VARCHAR2(6 CHAR)  DEFAULT 'ABSENT' NOT NULL
    CONSTRAINT chk_attendance_type CHECK (attendance_type IN ('ATTEND','ABSENT','LATE')),
                             CONSTRAINT pk_participant PRIMARY KEY (id),
                             CONSTRAINT fk_participant_member FOREIGN KEY (member_id)
                                 REFERENCES member(id)
                                 ON DELETE CASCADE,
                             CONSTRAINT fk_participant_attendance FOREIGN KEY (attendance_id)
                                 REFERENCES attendance(id)
                                 ON DELETE CASCADE
);

CREATE INDEX idx_participant_member     ON participant(member_id);
CREATE INDEX idx_participant_attendance ON participant(attendance_id);
CREATE INDEX idx_email_receiver_task ON email_receiver(task_id);
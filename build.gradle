import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
    ext {
        restdocsApiSpecVersion = '0.19.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.sonarqube" version "4.4.1.3373"
    id 'com.epages.restdocs-api-spec' version '0.19.2'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'jacoco'
}


group = 'gdsc.konkuk'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'


    runtimeOnly 'com.h2database:h2:2.2.224'
//    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1")


    //test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec:0.19.2'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
    testImplementation 'org.springframework.security:spring-security-test:6.3.1'

    swaggerUI 'org.webjars:swagger-ui:5.0.0'
}

openapi3 {
    servers = [
            { url = 'http://localhost:8080' },
    ]
    title = 'Post Service API'
    description = 'Post Service API description'
    version = '1.0.0'
    format = 'yaml'
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = "0.8.7"
}
jacocoTestReport {
    reports {
        html.required = true
        xml.required = true
    }
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn 'generateSwaggerUISample'

    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()

    from("${generateSwaggerUISampleTask.outputDir}")
    into("${project.buildDir}/resources/main/static/docs")
}

tasks.resolveMainClassName {
    dependsOn 'copySwaggerUI'
}

tasks.withType(BootJar).configureEach {
    dependsOn 'copySwaggerUI'
}

tasks.named('jar').configure {
    dependsOn 'copySwaggerUI'
}

// sonarqube plugins
sonar {
    properties {
        property "sonar.projectKey", "gdsc-konkuk_platform-core"
        property "sonar.organization", "gdsc-konkuk"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

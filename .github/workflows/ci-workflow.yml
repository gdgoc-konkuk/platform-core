name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: grant permission to gradle
        run: chmod +x gradlew

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: touch application.yml
        run: |
               mkdir ./src/main/resources
               touch ./src/main/resources/application.yml
          #          touch ./src/main/resources/application-test.yml
               echo "${{ secrets.APPLICATION_DEV_YML }}" > ./src/main/resources/application.yml
        #          echo "${{ secrets.APPLICATION_TEST_YML }}" > ./src/main/resources/application-test.yml
        shell: bash

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Upload Gradle Report
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: gradle-report
          path: build/reports

      - name: Backend CI Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          title: ❗️ Backend CI failed ❗️
          webhook: ${{ secrets.DISCORD_URL }}
          color: FF0000
